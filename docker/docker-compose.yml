version: "2.1"
services:

  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    expose:
      - "2181"
    volumes:
      - kafka_zookeeper:/opt/zookeeper-3.4.13/data
    networks:
      kafkanet:
        ipv4_address: 172.25.0.11

  kafka1:
    image: wurstmeister/kafka
    container_name: kafka1
    command: [start-kafka.sh]
    expose:
      - "8080"
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.25.0.12
      KAFKA_ZOOKEEPER_CONNECT: 172.25.0.11:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_OPTS: -javaagent:/prometheus/jmx_prometheus_javaagent-0.3.1.jar=8080:/prometheus/kafka-0-8-2.yml 
    volumes:
      - ./kafka:/prometheus
      - kafka_kafka1:/opt/kafka_2.12-2.2.0/logs
    networks:
      kafkanet:
        ipv4_address: 172.25.0.12
    depends_on:
      - "zookeeper"

  kafka2:
    image: wurstmeister/kafka
    container_name: kafka2
    command: [start-kafka.sh]
    expose:
      - "8080"
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 172.25.0.13
      KAFKA_ZOOKEEPER_CONNECT: 172.25.0.11:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_OPTS: -javaagent:/prometheus/jmx_prometheus_javaagent-0.3.1.jar=8080:/prometheus/kafka-0-8-2.yml 
    volumes:
      - ./kafka:/prometheus
      - kafka_kafka2:/opt/kafka_2.12-2.2.0/logs
    depends_on:
      - "zookeeper"
    networks:
      kafkanet:
        ipv4_address: 172.25.0.13

  kafka_manager:
    image: hlebalbau/kafka-manager:1.3.3.18
    container_name: kafka_manager
    expose:
      - "9000"
    environment:
      ZK_HOSTS: "172.25.0.11:2181"
      APPLICATION_SECRET: "random-secret"
    command: -Dpidfile.path=/dev/null
    depends_on:
      - "zookeeper"
      - "kafka1"
      - "kafka2"
    networks:
      kafkanet:
        ipv4_address: 172.25.0.14

  prometheus:
    image: prom/prometheus:v2.8.1
    container_name: prometheus
    expose:
      - "9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/flink.rules.yml:/etc/prometheus/flink.rules.yml
    depends_on:
      - "zookeeper"
      - "kafka1"
      - "kafka2"
    networks:
      kafkanet:
        ipv4_address: 172.25.0.15

  grafana:
    image: grafana/grafana:6.1.1
    container_name: grafana
    expose:
      - "3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=flink
    volumes:
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    depends_on:
      - "prometheus"
    networks:
      kafkanet:
        ipv4_address: 172.25.0.16

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${TAG:-6.6.0}
    container_name: elasticsearch
    expose:
      - "9200"
    networks:
      kafkanet:
        ipv4_address: 172.25.0.17
    volumes:
      - 'kafka_es:/usr/share/elasticsearch/data'

  kibana:
    image: docker.elastic.co/kibana/kibana:${TAG:-6.6.0}
    container_name: kibana
    expose:
      - "5601"
    networks:
      kafkanet:
        ipv4_address: 172.25.0.18
    depends_on: 
      - 'elasticsearch'

  zeppelin:
    image: apache/zeppelin:0.8.1
    hostname: zeppelin
    expose:
      - "8080"
      - "8443"
      - "4040"
    volumes:
      - ./zeppelin/machinelearning:/machinelearning
      - ./zeppelin/pyspark-notebooks:/zeppelin/notebook
      - ./zeppelin/zeppelin-interpreters/interpreter.json:/zeppelin/conf/interpreter.json
      - ./zeppelin/pyspark-packages/sklearn:/usr/lib/python3.6/site-packages/sklearn
      - ./zeppelin/pyspark-packages/spark_sklearn:/usr/lib/python3.6/site-packages/spark_skearn
      - ./zeppelin/pyspark-packages/kafka:/usr/lib/python3.6/site-packages/kafka
    networks:
      kafkanet:
        ipv4_address: 172.25.0.19

  #  jobmanager:
  #    image: flink:1.7.2-alpine
  #    container_name: jobmanager
  #    expose:
  #      - "6123"
  #      - "9249"
  #    ports:
  #      - "8081:8081"
  #      - "9250:9249"
  #    command: > 
  #        bash -c 'echo "metrics.reporter: prom" >> /opt/flink/conf/flink-conf.yaml
  #        && echo "metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter" >> /opt/flink/conf/flink-conf.yaml 
  #        && echo "metrics.reporter.prom.port: 9249" >> /opt/flink/conf/flink-conf.yaml 
  #        && echo "state.checkpoints.dir: /state" >> /opt/flink/conf/flink-conf.yaml 
  #        && cp /opt/flink/opt/flink-metrics-prometheus-*.jar /opt/flink/lib
  #        &&  /docker-entrypoint.sh jobmanager'
  #    environment:
  #      - JOB_MANAGER_RPC_ADDRESS=172.25.0.20
  #    volumes:
  #      - kafka_flink:/state
  #    networks:
  #      kafkanet:
  #        ipv4_address: 172.25.0.20
  #
  #  taskmanager:
  #    image: flink:1.7.2-alpine
  #    container_name: taskmanager
  #    expose:
  #      - "6121"
  #      - "6122"
  #      - "9249"
  #    ports:
  #      - "9249:9249"
  #    depends_on:
  #      - jobmanager
  #    command: > 
  #        bash -c 'echo "metrics.reporter: prom" >> /opt/flink/conf/flink-conf.yaml
  #        && echo "metrics.reporter.prom.class: org.apache.flink.metrics.prometheus.PrometheusReporter" >> /opt/flink/conf/flink-conf.yaml 
  #        && echo "metrics.reporter.prom.port: 9249" >> /opt/flink/conf/flink-conf.yaml 
  #        && echo "state.checkpoints.dir: /state" >> /opt/flink/conf/flink-conf.yaml 
  #        && cp /opt/flink/opt/flink-metrics-prometheus-*.jar /opt/flink/lib
  #        &&  /docker-entrypoint.sh taskmanager '
  #    environment:
  #      - JOB_MANAGER_RPC_ADDRESS=172.25.0.20
  ##    links:
  ##      - "jobmanager:jobmanager"
  #    volumes:
  #      - kafka_flink:/state
  #    networks:
  #      kafkanet:
  #        ipv4_address: 172.25.0.21

networks:
  kafkanet:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16
          gateway: 172.25.0.1

volumes:
  kafka_flink:
  kafka_zookeeper:
  kafka_kafka1:
  kafka_kafka2:
  kafka_es:
  kafka_zeppelin_packages:

